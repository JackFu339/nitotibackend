{"version":3,"sources":["../node_modules/rc-virtual-list/es/Filler.js","../node_modules/rc-virtual-list/es/utils/itemUtil.js","../node_modules/rc-virtual-list/node_modules/rc-util/es/Dom/findDOMNode.js","../node_modules/rc-virtual-list/es/utils/algorithmUtil.js","../node_modules/rc-virtual-list/es/List.js","../node_modules/rc-virtual-list/es/index.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","Filler","_ref","height","offset","children","prefixCls","outerStyle","innerStyle","display","flexDirection","undefined","position","overflow","transform","concat","left","right","top","React","style","className","classNames","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","sourceSymbolKeys","prototype","propertyIsEnumerable","call","alignScrollTop","scrollTop","scrollRange","getScrollPercentage","scrollHeight","clientHeight","getElementScrollPercentage","element","getNodeHeight","node","HTMLElement","ReactDOM","findDOMNode","offsetHeight","getRangeIndex","scrollPtg","itemCount","visibleCount","_getLocationItem","total","itemIndex","Math","floor","itemTopPtg","index","offsetPtg","getLocationItem","beforeCount","ceil","afterCount","itemOffsetPtg","startIndex","max","endIndex","min","getItemRelativeTop","_ref2","itemElementHeights","locatedItemTop","locatedItemOffset","getItemKey","getCompareItemRelativeTop","_ref4","locatedItemRelativeTop","locatedItemIndex","compareItemIndex","originCompareItemTop","compareItemKey","_index","_key","requireVirtual","itemHeight","count","virtual","getIndexByStartLoc","start","stepIndex","_typeof","Symbol","iterator","constructor","_defineProperties","props","descriptor","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","toString","e","_isNativeReflectConstruct","result","Super","_getPrototypeOf","NewTarget","this","_possibleConstructorReturn","self","ReferenceError","_assertThisInitialized","getPrototypeOf","ScrollStyle","overflowY","overflowAnchor","List","_React$Component","subClass","superClass","TypeError","create","_inherits","Constructor","protoProps","staticProps","_super","_this","instance","_classCallCheck","listRef","itemElements","lockScroll","onScroll","event","_this$props","data","disabled","_this$listRef$current","current","originScrollTop","state","_getRangeIndex","setState","status","triggerOnScroll","onRawScroll","getIndexKey","mergedProps","_mergedProps$data","item","console","error","itemKey","collectItemHeights","range","eleKey","scrollTo","arg0","raf","cancel","rafId","isVirtual","_this$props2","_arg0$align","align","findIndex","_this$state","relativeLocatedItemTop","relativeTop","mergedAlgin","shouldChange","abs","itemTop","_i","_eleKey","_getRangeIndex2","nextIndex","newOffsetPtg","_eleKey2","internalScrollTo","indexItemHeight","itemBottom","renderChildren","list","renderFunc","map","eleIndex","visibility","ref","ele","cachedProps","startItemTop","nextProps","_this2","_this$props3","onSkipRender","prevData","changedItemIndex","diff","originList","targetList","getKey","shortList","longList","originLen","targetLen","notExistKey","__EMPTY_ITEM__","diffIndex","multiple","shortKey","findListDiffIndex","_this$state2","nextStatus","_this$state3","_startIndex","_ref3","_this$state$cacheScro","cacheScroll","_itemIndex","rawTop","requestAnimationFrame","originLocatedItemRelativeTop","originItemIndex","_this$state4","originItemOffsetPtg","originStartIndex","originEndIndex","originCompareItemIndex","relativeScroll","_this3","compareItemRelativeTop","_this$props4","bestSimilarity","Number","MAX_VALUE","bestScrollTop","bestItemIndex","bestItemOffsetPtg","bestStartIndex","bestEndIndex","missSimilarity","maxScrollTop","_getRangeIndex3","compareItemTop","similarity","_this$state5","_this$props5","_this$props5$componen","component","Component","_this$props5$fullHeig","fullHeight","restProps","mergedClassName","shouldVirtual","assign","slice","mergedStyle","_this$state6","contentHeight","defaultProps"],"mappings":"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","file":"static/js/1.cc0b0135.chunk.js","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from 'react';\nimport classNames from 'classnames';\n/**\n * Fill component to provided the scroll content real height.\n */\n\nvar Filler = function Filler(_ref) {\n  var height = _ref.height,\n      offset = _ref.offset,\n      children = _ref.children,\n      prefixCls = _ref.prefixCls;\n  var outerStyle = {};\n  var innerStyle = {\n    display: 'flex',\n    flexDirection: 'column'\n  };\n\n  if (offset !== undefined) {\n    outerStyle = {\n      height: height,\n      position: 'relative',\n      overflow: 'hidden'\n    };\n    innerStyle = _objectSpread(_objectSpread({}, innerStyle), {}, {\n      transform: \"translateY(\".concat(offset, \"px)\"),\n      position: 'absolute',\n      left: 0,\n      right: 0,\n      top: 0\n    });\n  }\n\n  return React.createElement(\"div\", {\n    style: outerStyle\n  }, React.createElement(\"div\", {\n    style: innerStyle,\n    className: classNames(_defineProperty({}, \"\".concat(prefixCls, \"-holder-inner\"), prefixCls))\n  }, children));\n};\n\nexport default Filler;","function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport findDOMNode from \"rc-util/es/Dom/findDOMNode\";\n/**\n * Our algorithm have additional one ghost item\n * whose index as `data.length` to simplify the calculation\n */\n\nexport var GHOST_ITEM_KEY = '__rc_ghost_item__';\n/**\n * Get location item and its align percentage with the scroll percentage.\n * We should measure current scroll position to decide which item is the location item.\n * And then fill the top count and bottom count with the base of location item.\n *\n * `total` should be the real count instead of `total - 1` in calculation.\n */\n\nfunction getLocationItem(scrollPtg, total) {\n  var itemIndex = Math.floor(scrollPtg * total);\n  var itemTopPtg = itemIndex / total;\n  var itemBottomPtg = (itemIndex + 1) / total;\n  var itemOffsetPtg = (scrollPtg - itemTopPtg) / (itemBottomPtg - itemTopPtg);\n  return {\n    index: itemIndex,\n    offsetPtg: itemOffsetPtg\n  };\n}\n/**\n * Safari has the elasticity effect which provides negative `scrollTop` value.\n * We should ignore it since will make scroll animation shake.\n */\n\n\nexport function alignScrollTop(scrollTop, scrollRange) {\n  if (scrollTop < 0) {\n    return 0;\n  }\n\n  if (scrollTop >= scrollRange) {\n    return scrollRange;\n  }\n\n  return scrollTop;\n}\nexport function getScrollPercentage(_ref) {\n  var scrollTop = _ref.scrollTop,\n      scrollHeight = _ref.scrollHeight,\n      clientHeight = _ref.clientHeight;\n\n  if (scrollHeight <= clientHeight) {\n    return 0;\n  }\n\n  var scrollRange = scrollHeight - clientHeight;\n  var alignedScrollTop = alignScrollTop(scrollTop, scrollRange);\n  var scrollTopPtg = alignedScrollTop / scrollRange;\n  return scrollTopPtg;\n}\nexport function getElementScrollPercentage(element) {\n  if (!element) {\n    return 0;\n  }\n\n  return getScrollPercentage(element);\n}\n/**\n * Get node `offsetHeight`. We prefer node is a dom element directly.\n * But if not provided, downgrade to `findDOMNode` to get the real dom element.\n */\n\nexport function getNodeHeight(node) {\n  var element = findDOMNode(node);\n  return element ? element.offsetHeight : 0;\n}\n/**\n * Get display items start, end, located item index. This is pure math calculation\n */\n\nexport function getRangeIndex(scrollPtg, itemCount, visibleCount) {\n  var _getLocationItem = getLocationItem(scrollPtg, itemCount),\n      index = _getLocationItem.index,\n      offsetPtg = _getLocationItem.offsetPtg;\n\n  var beforeCount = Math.ceil(scrollPtg * visibleCount);\n  var afterCount = Math.ceil((1 - scrollPtg) * visibleCount);\n  return {\n    itemIndex: index,\n    itemOffsetPtg: offsetPtg,\n    startIndex: Math.max(0, index - beforeCount),\n    endIndex: Math.min(itemCount - 1, index + afterCount)\n  };\n}\n/**\n * Calculate the located item related top with current window height\n */\n\nexport function getItemRelativeTop(_ref2) {\n  var itemIndex = _ref2.itemIndex,\n      itemOffsetPtg = _ref2.itemOffsetPtg,\n      itemElementHeights = _ref2.itemElementHeights,\n      scrollPtg = _ref2.scrollPtg,\n      clientHeight = _ref2.clientHeight,\n      getItemKey = _ref2.getItemKey;\n  var locatedItemHeight = itemElementHeights[getItemKey(itemIndex)] || 0;\n  var locatedItemTop = scrollPtg * clientHeight;\n  var locatedItemOffset = itemOffsetPtg * locatedItemHeight;\n  return Math.floor(locatedItemTop - locatedItemOffset);\n}\n/**\n * Calculate the located item absolute top with whole scroll height\n */\n\nexport function getItemAbsoluteTop(_ref3) {\n  var scrollTop = _ref3.scrollTop,\n      rest = _objectWithoutProperties(_ref3, [\"scrollTop\"]);\n\n  return scrollTop + getItemRelativeTop(rest);\n}\nexport function getCompareItemRelativeTop(_ref4) {\n  var locatedItemRelativeTop = _ref4.locatedItemRelativeTop,\n      locatedItemIndex = _ref4.locatedItemIndex,\n      compareItemIndex = _ref4.compareItemIndex,\n      startIndex = _ref4.startIndex,\n      endIndex = _ref4.endIndex,\n      getItemKey = _ref4.getItemKey,\n      itemElementHeights = _ref4.itemElementHeights;\n  var originCompareItemTop = locatedItemRelativeTop;\n  var compareItemKey = getItemKey(compareItemIndex);\n\n  if (compareItemIndex <= locatedItemIndex) {\n    for (var index = locatedItemIndex; index >= startIndex; index -= 1) {\n      var key = getItemKey(index);\n\n      if (key === compareItemKey) {\n        break;\n      }\n\n      var prevItemKey = getItemKey(index - 1);\n      originCompareItemTop -= itemElementHeights[prevItemKey] || 0;\n    }\n  } else {\n    for (var _index = locatedItemIndex; _index <= endIndex; _index += 1) {\n      var _key = getItemKey(_index);\n\n      if (_key === compareItemKey) {\n        break;\n      }\n\n      originCompareItemTop += itemElementHeights[_key] || 0;\n    }\n  }\n\n  return originCompareItemTop;\n}\nexport function requireVirtual(height, itemHeight, count, virtual) {\n  return virtual !== false && typeof height === 'number' && count * itemHeight > height;\n}","import ReactDOM from 'react-dom';\n/**\n * Return if a node is a DOM node. Else will return by `findDOMNode`\n */\n\nexport default function findDOMNode(node) {\n  if (node instanceof HTMLElement) {\n    return node;\n  }\n\n  return ReactDOM.findDOMNode(node);\n}","/**\n * Get index with specific start index one by one. e.g.\n * min: 3, max: 9, start: 6\n *\n * Return index is:\n * [0]: 6\n * [1]: 7\n * [2]: 5\n * [3]: 8\n * [4]: 4\n * [5]: 9\n * [6]: 3\n */\nexport function getIndexByStartLoc(min, max, start, index) {\n  var beforeCount = start - min;\n  var afterCount = max - start;\n  var balanceCount = Math.min(beforeCount, afterCount) * 2; // Balance\n\n  if (index <= balanceCount) {\n    var stepIndex = Math.floor(index / 2);\n\n    if (index % 2) {\n      return start + stepIndex + 1;\n    }\n\n    return start - stepIndex;\n  } // One is out of range\n\n\n  if (beforeCount > afterCount) {\n    return start - (index - afterCount);\n  }\n\n  return start + (index - beforeCount);\n}\n/**\n * We assume that 2 list has only 1 item diff and others keeping the order.\n * So we can use dichotomy algorithm to find changed one.\n */\n\nexport function findListDiffIndex(originList, targetList, getKey) {\n  var originLen = originList.length;\n  var targetLen = targetList.length;\n  var shortList;\n  var longList;\n\n  if (originLen === 0 && targetLen === 0) {\n    return null;\n  }\n\n  if (originLen < targetLen) {\n    shortList = originList;\n    longList = targetList;\n  } else {\n    shortList = targetList;\n    longList = originList;\n  }\n\n  var notExistKey = {\n    __EMPTY_ITEM__: true\n  };\n\n  function getItemKey(item) {\n    if (item !== undefined) {\n      return getKey(item);\n    }\n\n    return notExistKey;\n  } // Loop to find diff one\n\n\n  var diffIndex = null;\n  var multiple = Math.abs(originLen - targetLen) !== 1;\n\n  for (var i = 0; i < longList.length; i += 1) {\n    var shortKey = getItemKey(shortList[i]);\n    var longKey = getItemKey(longList[i]);\n\n    if (shortKey !== longKey) {\n      diffIndex = i;\n      multiple = multiple || shortKey !== getItemKey(longList[i + 1]);\n      break;\n    }\n  }\n\n  return diffIndex === null ? null : {\n    index: diffIndex,\n    multiple: multiple\n  };\n}","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport raf from 'raf';\nimport Filler from './Filler';\nimport { getElementScrollPercentage, getScrollPercentage, getNodeHeight, getRangeIndex, getItemAbsoluteTop, GHOST_ITEM_KEY, getItemRelativeTop, getCompareItemRelativeTop, alignScrollTop, requireVirtual } from './utils/itemUtil';\nimport { getIndexByStartLoc, findListDiffIndex } from './utils/algorithmUtil';\nvar ScrollStyle = {\n  overflowY: 'auto',\n  overflowAnchor: 'none'\n};\nvar ITEM_SCALE_RATE = 1;\n/**\n * We use class component here since typescript can not support generic in function component\n *\n * Virtual list display logic:\n * 1. scroll / initialize trigger measure\n * 2. Get location item of current `scrollTop`\n * 3. [Render] Render visible items\n * 4. Get all the visible items height\n * 5. [Render] Update top item `margin-top` to fit the position\n *\n * Algorithm:\n * We split scroll bar into equal slice. An item with whatever height occupy the same range slice.\n * When `scrollTop` change,\n * it will calculate the item percentage position and move item to the position.\n * Then calculate other item position base on the located item.\n *\n * Concept:\n *\n * # located item\n * The base position item which other items position calculate base on.\n */\n\nvar List =\n/** @class */\nfunction () {\n  var List = /*#__PURE__*/function (_React$Component) {\n    _inherits(List, _React$Component);\n\n    var _super = _createSuper(List);\n\n    function List(props) {\n      var _this;\n\n      _classCallCheck(this, List);\n\n      _this = _super.call(this, props);\n      _this.listRef = React.createRef();\n      _this.itemElements = {};\n      _this.itemElementHeights = {};\n      /**\n       * Lock scroll process with `onScroll` event.\n       * This is used for `data` length change and `scrollTop` restore\n       */\n\n      _this.lockScroll = false;\n      /**\n       * Phase 2: Trigger render since we should re-calculate current position.\n       */\n\n      _this.onScroll = function (event) {\n        var _this$props = _this.props,\n            data = _this$props.data,\n            height = _this$props.height,\n            itemHeight = _this$props.itemHeight,\n            disabled = _this$props.disabled;\n        var _this$listRef$current = _this.listRef.current,\n            originScrollTop = _this$listRef$current.scrollTop,\n            clientHeight = _this$listRef$current.clientHeight,\n            scrollHeight = _this$listRef$current.scrollHeight;\n        var scrollTop = alignScrollTop(originScrollTop, scrollHeight - clientHeight); // Skip if `scrollTop` not change to avoid shake\n\n        if (scrollTop === _this.state.scrollTop || _this.lockScroll || disabled) {\n          return;\n        }\n\n        var scrollPtg = getElementScrollPercentage(_this.listRef.current);\n        var visibleCount = Math.ceil(height / itemHeight);\n\n        var _getRangeIndex = getRangeIndex(scrollPtg, data.length, visibleCount),\n            itemIndex = _getRangeIndex.itemIndex,\n            itemOffsetPtg = _getRangeIndex.itemOffsetPtg,\n            startIndex = _getRangeIndex.startIndex,\n            endIndex = _getRangeIndex.endIndex;\n\n        _this.setState({\n          status: 'MEASURE_START',\n          scrollTop: scrollTop,\n          itemIndex: itemIndex,\n          itemOffsetPtg: itemOffsetPtg,\n          startIndex: startIndex,\n          endIndex: endIndex\n        });\n\n        _this.triggerOnScroll(event);\n      };\n\n      _this.onRawScroll = function (event) {\n        var scrollTop = _this.listRef.current.scrollTop;\n\n        _this.setState({\n          scrollTop: scrollTop\n        });\n\n        _this.triggerOnScroll(event);\n      };\n\n      _this.triggerOnScroll = function (event) {\n        var onScroll = _this.props.onScroll;\n\n        if (onScroll && event) {\n          onScroll(event);\n        }\n      };\n\n      _this.getIndexKey = function (index, props) {\n        var mergedProps = props || _this.props;\n        var _mergedProps$data = mergedProps.data,\n            data = _mergedProps$data === void 0 ? [] : _mergedProps$data; // Return ghost key as latest index item\n\n        if (index === data.length) {\n          return GHOST_ITEM_KEY;\n        }\n\n        var item = data[index];\n        /* istanbul ignore next */\n\n        if (item === undefined) {\n          console.error('Not find index item. Please report this since it is a bug.');\n          return null;\n        }\n\n        return _this.getItemKey(item, mergedProps);\n      };\n\n      _this.getItemKey = function (item, props) {\n        var _ref = props || _this.props,\n            itemKey = _ref.itemKey;\n\n        return typeof itemKey === 'function' ? itemKey(item) : item[itemKey];\n      };\n      /**\n       * Collect current rendered dom element item heights\n       */\n\n\n      _this.collectItemHeights = function (range) {\n        var _ref2 = range || _this.state,\n            startIndex = _ref2.startIndex,\n            endIndex = _ref2.endIndex;\n\n        var data = _this.props.data; // Record here since measure item height will get warning in `render`\n\n        for (var index = startIndex; index <= endIndex; index += 1) {\n          var item = data[index]; // Only collect exist item height\n\n          if (item) {\n            var eleKey = _this.getItemKey(item);\n\n            _this.itemElementHeights[eleKey] = getNodeHeight(_this.itemElements[eleKey]);\n          }\n        }\n      };\n\n      _this.scrollTo = function (arg0) {\n        raf.cancel(_this.rafId);\n        _this.rafId = raf(function () {\n          // Number top\n          if (_typeof(arg0) === 'object') {\n            var isVirtual = _this.state.isVirtual;\n            var _this$props2 = _this.props,\n                height = _this$props2.height,\n                itemHeight = _this$props2.itemHeight,\n                data = _this$props2.data;\n            var _arg0$align = arg0.align,\n                align = _arg0$align === void 0 ? 'auto' : _arg0$align;\n            var index = 0;\n\n            if ('index' in arg0) {\n              index = arg0.index;\n            } else if ('key' in arg0) {\n              var key = arg0.key;\n              index = data.findIndex(function (item) {\n                return _this.getItemKey(item) === key;\n              });\n            }\n\n            var visibleCount = Math.ceil(height / itemHeight);\n            var item = data[index];\n\n            if (item) {\n              var clientHeight = _this.listRef.current.clientHeight;\n\n              if (isVirtual) {\n                // Calculate related data\n                var _this$state = _this.state,\n                    itemIndex = _this$state.itemIndex,\n                    itemOffsetPtg = _this$state.itemOffsetPtg;\n                var scrollTop = _this.listRef.current.scrollTop;\n                var scrollPtg = getElementScrollPercentage(_this.listRef.current);\n                var relativeLocatedItemTop = getItemRelativeTop({\n                  itemIndex: itemIndex,\n                  itemOffsetPtg: itemOffsetPtg,\n                  itemElementHeights: _this.itemElementHeights,\n                  scrollPtg: scrollPtg,\n                  clientHeight: clientHeight,\n                  getItemKey: _this.getIndexKey\n                }); // We will force render related items to collect height for re-location\n\n                _this.setState({\n                  startIndex: Math.max(0, index - visibleCount),\n                  endIndex: Math.min(data.length - 1, index + visibleCount)\n                }, function () {\n                  _this.collectItemHeights(); // Calculate related top\n\n\n                  var relativeTop;\n                  var mergedAlgin = align;\n\n                  if (align === 'auto') {\n                    var shouldChange = true; // Check if exist in the visible range\n\n                    if (Math.abs(itemIndex - index) < visibleCount) {\n                      var itemTop = relativeLocatedItemTop;\n\n                      if (index < itemIndex) {\n                        for (var i = index; i < itemIndex; i += 1) {\n                          var eleKey = _this.getIndexKey(i);\n\n                          itemTop -= _this.itemElementHeights[eleKey] || 0;\n                        }\n                      } else {\n                        for (var _i = itemIndex; _i <= index; _i += 1) {\n                          var _eleKey = _this.getIndexKey(_i);\n\n                          itemTop += _this.itemElementHeights[_eleKey] || 0;\n                        }\n                      }\n\n                      shouldChange = itemTop <= 0 || itemTop >= clientHeight;\n                    }\n\n                    if (shouldChange) {\n                      // Out of range will fall back to position align\n                      mergedAlgin = index < itemIndex ? 'top' : 'bottom';\n                    } else {\n                      var _getRangeIndex2 = getRangeIndex(scrollPtg, data.length, visibleCount),\n                          nextIndex = _getRangeIndex2.itemIndex,\n                          newOffsetPtg = _getRangeIndex2.itemOffsetPtg,\n                          startIndex = _getRangeIndex2.startIndex,\n                          endIndex = _getRangeIndex2.endIndex;\n\n                      _this.setState({\n                        scrollTop: scrollTop,\n                        itemIndex: nextIndex,\n                        itemOffsetPtg: newOffsetPtg,\n                        startIndex: startIndex,\n                        endIndex: endIndex\n                      });\n\n                      return;\n                    }\n                  } // Align with position should make scroll happen\n\n\n                  if (mergedAlgin === 'top') {\n                    relativeTop = 0;\n                  } else if (mergedAlgin === 'bottom') {\n                    var _eleKey2 = _this.getItemKey(item);\n\n                    relativeTop = clientHeight - _this.itemElementHeights[_eleKey2] || 0;\n                  }\n\n                  _this.internalScrollTo({\n                    itemIndex: index,\n                    relativeTop: relativeTop\n                  });\n                });\n              } else {\n                // Raw list without virtual scroll set position directly\n                _this.collectItemHeights({\n                  startIndex: 0,\n                  endIndex: data.length - 1\n                });\n\n                var mergedAlgin = align; // Collection index item position\n\n                var indexItemHeight = _this.itemElementHeights[_this.getIndexKey(index)];\n\n                var itemTop = 0;\n\n                for (var i = 0; i < index; i += 1) {\n                  var eleKey = _this.getIndexKey(i);\n\n                  itemTop += _this.itemElementHeights[eleKey] || 0;\n                }\n\n                var itemBottom = itemTop + indexItemHeight;\n\n                if (mergedAlgin === 'auto') {\n                  if (itemTop < _this.listRef.current.scrollTop) {\n                    mergedAlgin = 'top';\n                  } else if (itemBottom > _this.listRef.current.scrollTop + clientHeight) {\n                    mergedAlgin = 'bottom';\n                  }\n                }\n\n                if (mergedAlgin === 'top') {\n                  _this.listRef.current.scrollTop = itemTop;\n                } else if (mergedAlgin === 'bottom') {\n                  _this.listRef.current.scrollTop = itemTop - (clientHeight - indexItemHeight);\n                }\n              }\n            }\n          } else {\n            _this.listRef.current.scrollTop = arg0;\n          }\n        });\n      };\n      /**\n       * Phase 4: Render item and get all the visible items height\n       */\n\n\n      _this.renderChildren = function (list, startIndex, renderFunc) {\n        var status = _this.state.status; // We should measure rendered item height\n\n        return list.map(function (item, index) {\n          var eleIndex = startIndex + index;\n          var node = renderFunc(item, eleIndex, {\n            style: status === 'MEASURE_START' ? {\n              visibility: 'hidden'\n            } : {}\n          });\n\n          var eleKey = _this.getIndexKey(eleIndex); // Pass `key` and `ref` for internal measure\n\n\n          return React.cloneElement(node, {\n            key: eleKey,\n            ref: function ref(ele) {\n              _this.itemElements[eleKey] = ele;\n            }\n          });\n        });\n      };\n\n      _this.cachedProps = props;\n      _this.state = {\n        status: 'NONE',\n        scrollTop: null,\n        itemIndex: 0,\n        itemOffsetPtg: 0,\n        startIndex: 0,\n        endIndex: 0,\n        startItemTop: 0,\n        isVirtual: requireVirtual(props.height, props.itemHeight, props.data.length, props.virtual),\n        itemCount: props.data.length\n      };\n      return _this;\n    }\n\n    _createClass(List, [{\n      key: \"componentDidMount\",\n\n      /**\n       * Phase 1: Initial should sync with default scroll top\n       */\n      value: function componentDidMount() {\n        if (this.listRef.current) {\n          this.listRef.current.scrollTop = 0;\n          this.onScroll(null);\n        }\n      }\n      /**\n       * Phase 4: Record used item height\n       * Phase 5: Trigger re-render to use correct position\n       */\n\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate() {\n        var _this2 = this;\n\n        var status = this.state.status;\n        var _this$props3 = this.props,\n            data = _this$props3.data,\n            height = _this$props3.height,\n            itemHeight = _this$props3.itemHeight,\n            disabled = _this$props3.disabled,\n            onSkipRender = _this$props3.onSkipRender,\n            virtual = _this$props3.virtual;\n        var prevData = this.cachedProps.data || [];\n        var changedItemIndex = null;\n\n        if (prevData.length !== data.length) {\n          var diff = findListDiffIndex(prevData, data, this.getItemKey);\n          changedItemIndex = diff ? diff.index : null;\n        }\n\n        if (disabled) {\n          // Should trigger `onSkipRender` to tell that diff component is not render in the list\n          if (data.length > prevData.length) {\n            var _this$state2 = this.state,\n                startIndex = _this$state2.startIndex,\n                endIndex = _this$state2.endIndex;\n\n            if (onSkipRender && (changedItemIndex === null || changedItemIndex < startIndex || endIndex < changedItemIndex)) {\n              onSkipRender();\n            }\n          }\n\n          return;\n        }\n\n        var isVirtual = requireVirtual(height, itemHeight, data.length, virtual);\n        var nextStatus = status;\n\n        if (this.state.isVirtual !== isVirtual) {\n          nextStatus = isVirtual ? 'SWITCH_TO_VIRTUAL' : 'SWITCH_TO_RAW';\n          this.setState({\n            isVirtual: isVirtual,\n            status: nextStatus\n          });\n          /**\n           * We will wait a tick to let list turn to virtual list.\n           * And then use virtual list sync logic to adjust the scroll.\n           */\n\n          if (nextStatus === 'SWITCH_TO_VIRTUAL') {\n            return;\n          }\n        }\n\n        if (status === 'MEASURE_START') {\n          var _this$state3 = this.state,\n              _startIndex = _this$state3.startIndex,\n              itemIndex = _this$state3.itemIndex,\n              itemOffsetPtg = _this$state3.itemOffsetPtg;\n          var scrollTop = this.listRef.current.scrollTop; // Record here since measure item height will get warning in `render`\n\n          this.collectItemHeights(); // Calculate top visible item top offset\n\n          var locatedItemTop = getItemAbsoluteTop({\n            itemIndex: itemIndex,\n            itemOffsetPtg: itemOffsetPtg,\n            itemElementHeights: this.itemElementHeights,\n            scrollTop: scrollTop,\n            scrollPtg: getElementScrollPercentage(this.listRef.current),\n            clientHeight: this.listRef.current.clientHeight,\n            getItemKey: this.getIndexKey\n          });\n          var startItemTop = locatedItemTop;\n\n          for (var index = itemIndex - 1; index >= _startIndex; index -= 1) {\n            startItemTop -= this.itemElementHeights[this.getIndexKey(index)] || 0;\n          }\n\n          this.setState({\n            status: 'MEASURE_DONE',\n            startItemTop: startItemTop\n          });\n        }\n\n        if (status === 'SWITCH_TO_RAW') {\n          /**\n           * After virtual list back to raw list,\n           * we update the `scrollTop` to real top instead of percentage top.\n           */\n          var _this$state$cacheScro = this.state.cacheScroll,\n              _itemIndex = _this$state$cacheScro.itemIndex,\n              relativeTop = _this$state$cacheScro.relativeTop;\n          var rawTop = relativeTop;\n\n          for (var _index = 0; _index < _itemIndex; _index += 1) {\n            rawTop -= this.itemElementHeights[this.getIndexKey(_index)] || 0;\n          }\n\n          this.lockScroll = true;\n          this.listRef.current.scrollTop = -rawTop;\n          this.setState({\n            status: 'MEASURE_DONE',\n            itemIndex: 0\n          });\n          requestAnimationFrame(function () {\n            requestAnimationFrame(function () {\n              _this2.lockScroll = false;\n            });\n          });\n        } else if (prevData.length !== data.length && changedItemIndex !== null && height && virtual !== false) {\n          /**\n           * Re-calculate the item position since `data` length changed.\n           * [IMPORTANT] We use relative position calculate here.\n           */\n          var originItemIndex = this.state.itemIndex;\n          var _this$state4 = this.state,\n              originItemOffsetPtg = _this$state4.itemOffsetPtg,\n              originStartIndex = _this$state4.startIndex,\n              originEndIndex = _this$state4.endIndex,\n              originScrollTop = _this$state4.scrollTop; // 1. Refresh item heights\n\n          this.collectItemHeights(); // 1. Get origin located item top\n\n          var originLocatedItemRelativeTop;\n\n          if (this.state.status === 'SWITCH_TO_VIRTUAL') {\n            originItemIndex = 0;\n            originLocatedItemRelativeTop = -this.state.scrollTop;\n          } else {\n            originLocatedItemRelativeTop = getItemRelativeTop({\n              itemIndex: originItemIndex,\n              itemOffsetPtg: originItemOffsetPtg,\n              itemElementHeights: this.itemElementHeights,\n              scrollPtg: getScrollPercentage({\n                scrollTop: originScrollTop,\n                scrollHeight: prevData.length * itemHeight,\n                clientHeight: this.listRef.current.clientHeight\n              }),\n              clientHeight: this.listRef.current.clientHeight,\n              getItemKey: function getItemKey(index) {\n                return _this2.getIndexKey(index, _this2.cachedProps);\n              }\n            });\n          } // 2. Find the compare item\n\n\n          var originCompareItemIndex = changedItemIndex - 1; // Use next one since there are not more item before removed\n\n          if (originCompareItemIndex < 0) {\n            originCompareItemIndex = 0;\n          } // 3. Find the compare item top\n\n\n          var originCompareItemTop = getCompareItemRelativeTop({\n            locatedItemRelativeTop: originLocatedItemRelativeTop,\n            locatedItemIndex: originItemIndex,\n            compareItemIndex: originCompareItemIndex,\n            startIndex: originStartIndex,\n            endIndex: originEndIndex,\n            getItemKey: function getItemKey(index) {\n              return _this2.getIndexKey(index, _this2.cachedProps);\n            },\n            itemElementHeights: this.itemElementHeights\n          });\n\n          if (nextStatus === 'SWITCH_TO_RAW') {\n            /**\n             * We will record current measure relative item top and apply in raw list after list turned\n             */\n            this.setState({\n              cacheScroll: {\n                itemIndex: originCompareItemIndex,\n                relativeTop: originCompareItemTop\n              }\n            });\n          } else {\n            this.internalScrollTo({\n              itemIndex: originCompareItemIndex,\n              relativeTop: originCompareItemTop\n            });\n          }\n        } else if (nextStatus === 'SWITCH_TO_RAW') {\n          // This is only trigger when height changes that all items can show in raw\n          // Let's reset back to top\n          this.setState({\n            cacheScroll: {\n              itemIndex: 0,\n              relativeTop: 0\n            }\n          });\n        }\n\n        this.cachedProps = this.props;\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        raf.cancel(this.rafId);\n      }\n    }, {\n      key: \"internalScrollTo\",\n      value: function internalScrollTo(relativeScroll) {\n        var _this3 = this;\n\n        var compareItemIndex = relativeScroll.itemIndex,\n            compareItemRelativeTop = relativeScroll.relativeTop;\n        var originScrollTop = this.state.scrollTop;\n        var _this$props4 = this.props,\n            data = _this$props4.data,\n            itemHeight = _this$props4.itemHeight,\n            height = _this$props4.height; // 1. Find the best match compare item top\n\n        var bestSimilarity = Number.MAX_VALUE;\n        var bestScrollTop = null;\n        var bestItemIndex = null;\n        var bestItemOffsetPtg = null;\n        var bestStartIndex = null;\n        var bestEndIndex = null;\n        var missSimilarity = 0;\n        var scrollHeight = data.length * itemHeight;\n        var clientHeight = this.listRef.current.clientHeight;\n        var maxScrollTop = scrollHeight - clientHeight;\n\n        for (var i = 0; i < maxScrollTop; i += 1) {\n          var scrollTop = getIndexByStartLoc(0, maxScrollTop, originScrollTop, i);\n          var scrollPtg = getScrollPercentage({\n            scrollTop: scrollTop,\n            scrollHeight: scrollHeight,\n            clientHeight: clientHeight\n          });\n          var visibleCount = Math.ceil(height / itemHeight);\n\n          var _getRangeIndex3 = getRangeIndex(scrollPtg, data.length, visibleCount),\n              itemIndex = _getRangeIndex3.itemIndex,\n              itemOffsetPtg = _getRangeIndex3.itemOffsetPtg,\n              startIndex = _getRangeIndex3.startIndex,\n              endIndex = _getRangeIndex3.endIndex; // No need to check if compare item out of the index to save performance\n\n\n          if (startIndex <= compareItemIndex && compareItemIndex <= endIndex) {\n            // 1.1 Get measure located item relative top\n            var locatedItemRelativeTop = getItemRelativeTop({\n              itemIndex: itemIndex,\n              itemOffsetPtg: itemOffsetPtg,\n              itemElementHeights: this.itemElementHeights,\n              scrollPtg: scrollPtg,\n              clientHeight: clientHeight,\n              getItemKey: this.getIndexKey\n            });\n            var compareItemTop = getCompareItemRelativeTop({\n              locatedItemRelativeTop: locatedItemRelativeTop,\n              locatedItemIndex: itemIndex,\n              compareItemIndex: compareItemIndex,\n              startIndex: startIndex,\n              endIndex: endIndex,\n              getItemKey: this.getIndexKey,\n              itemElementHeights: this.itemElementHeights\n            }); // 1.2 Find best match compare item top\n\n            var similarity = Math.abs(compareItemTop - compareItemRelativeTop);\n\n            if (similarity < bestSimilarity) {\n              bestSimilarity = similarity;\n              bestScrollTop = scrollTop;\n              bestItemIndex = itemIndex;\n              bestItemOffsetPtg = itemOffsetPtg;\n              bestStartIndex = startIndex;\n              bestEndIndex = endIndex;\n              missSimilarity = 0;\n            } else {\n              missSimilarity += 1;\n            }\n          } // If keeping 10 times not match similarity,\n          // check more scrollTop is meaningless.\n          // Here boundary is set to 10.\n\n\n          if (missSimilarity > 10) {\n            break;\n          }\n        } // 2. Re-scroll if has best scroll match\n\n\n        if (bestScrollTop !== null) {\n          this.lockScroll = true;\n          this.listRef.current.scrollTop = bestScrollTop;\n          this.setState({\n            status: 'MEASURE_START',\n            scrollTop: bestScrollTop,\n            itemIndex: bestItemIndex,\n            itemOffsetPtg: bestItemOffsetPtg,\n            startIndex: bestStartIndex,\n            endIndex: bestEndIndex\n          });\n          requestAnimationFrame(function () {\n            requestAnimationFrame(function () {\n              _this3.lockScroll = false;\n            });\n          });\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$state5 = this.state,\n            isVirtual = _this$state5.isVirtual,\n            itemCount = _this$state5.itemCount;\n\n        var _this$props5 = this.props,\n            prefixCls = _this$props5.prefixCls,\n            style = _this$props5.style,\n            className = _this$props5.className,\n            _this$props5$componen = _this$props5.component,\n            Component = _this$props5$componen === void 0 ? 'div' : _this$props5$componen,\n            height = _this$props5.height,\n            itemHeight = _this$props5.itemHeight,\n            _this$props5$fullHeig = _this$props5.fullHeight,\n            fullHeight = _this$props5$fullHeig === void 0 ? true : _this$props5$fullHeig,\n            data = _this$props5.data,\n            children = _this$props5.children,\n            itemKey = _this$props5.itemKey,\n            onSkipRender = _this$props5.onSkipRender,\n            disabled = _this$props5.disabled,\n            virtual = _this$props5.virtual,\n            restProps = _objectWithoutProperties(_this$props5, [\"prefixCls\", \"style\", \"className\", \"component\", \"height\", \"itemHeight\", \"fullHeight\", \"data\", \"children\", \"itemKey\", \"onSkipRender\", \"disabled\", \"virtual\"]);\n\n        var mergedClassName = classNames(prefixCls, className); // Render pure list if not set height or height is enough for all items\n\n        if (!isVirtual) {\n          /**\n           * Virtual list switch is works on component updated.\n           * We should double check here if need cut the content.\n           */\n          var shouldVirtual = requireVirtual(height, itemHeight, data.length, virtual);\n          return React.createElement(Component, Object.assign({\n            style: height ? _objectSpread(_objectSpread({}, style), {}, _defineProperty({}, fullHeight ? 'height' : 'maxHeight', height), ScrollStyle) : style,\n            className: mergedClassName\n          }, restProps, {\n            onScroll: this.onRawScroll,\n            ref: this.listRef\n          }), React.createElement(Filler, {\n            prefixCls: prefixCls,\n            height: height\n          }, this.renderChildren(shouldVirtual ? data.slice(0, Math.ceil(height / itemHeight)) : data, 0, children)));\n        } // Use virtual list\n\n\n        var mergedStyle = _objectSpread(_objectSpread({}, style), {}, {\n          height: height\n        }, ScrollStyle);\n\n        var _this$state6 = this.state,\n            status = _this$state6.status,\n            startIndex = _this$state6.startIndex,\n            endIndex = _this$state6.endIndex,\n            startItemTop = _this$state6.startItemTop;\n        var contentHeight = itemCount * itemHeight * ITEM_SCALE_RATE;\n        return React.createElement(Component, Object.assign({\n          style: mergedStyle,\n          className: mergedClassName\n        }, restProps, {\n          onScroll: this.onScroll,\n          ref: this.listRef\n        }), React.createElement(Filler, {\n          prefixCls: prefixCls,\n          height: contentHeight,\n          offset: status === 'MEASURE_DONE' ? startItemTop : 0\n        }, this.renderChildren(data.slice(startIndex, endIndex + 1), startIndex, children)));\n      }\n    }], [{\n      key: \"getDerivedStateFromProps\",\n      value: function getDerivedStateFromProps(nextProps) {\n        if (!nextProps.disabled) {\n          return {\n            itemCount: nextProps.data.length\n          };\n        }\n\n        return null;\n      }\n    }]);\n\n    return List;\n  }(React.Component);\n\n  List.defaultProps = {\n    itemHeight: 15,\n    data: []\n  };\n  return List;\n}();\n\nexport default List;","import List from './List';\nexport default List;"],"sourceRoot":""}